# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainCryptoWallet.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import bit
import bech32
import binascii
import hashlib
import pyperclip
from bit import utils
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_CryptoWallet(object):
    def setupUi(self, CryptoWallet):
        CryptoWallet.setObjectName("CryptoWallet")
        CryptoWallet.resize(1133, 577)
        self.centralwidget = QtWidgets.QWidget(CryptoWallet)
        self.centralwidget.setObjectName("centralwidget")
        self.lblChiave1 = QtWidgets.QLabel(self.centralwidget)
        self.lblChiave1.setGeometry(QtCore.QRect(20, 20, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblChiave1.setFont(font)
        self.lblChiave1.setObjectName("lblChiave1")
        self.lblChiave2 = QtWidgets.QLabel(self.centralwidget)
        self.lblChiave2.setGeometry(QtCore.QRect(20, 70, 61, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblChiave2.setFont(font)
        self.lblChiave2.setObjectName("lblChiave2")
        self.lnChiave1 = QtWidgets.QLineEdit(self.centralwidget)
        self.lnChiave1.setGeometry(QtCore.QRect(100, 20, 113, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnChiave1.setFont(font)
        self.lnChiave1.setObjectName("lnChiave1")
        self.lnChiave2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lnChiave2.setGeometry(QtCore.QRect(100, 70, 1011, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnChiave2.setFont(font)
        self.lnChiave2.setObjectName("lnChiave1_2")
        self.btnSubmit = QtWidgets.QPushButton(self.centralwidget)
        self.btnSubmit.setGeometry(QtCore.QRect(330, 130, 441, 41))
        self.btnSubmit.setObjectName("btnSubmit")
        self.lblPrivateKey = QtWidgets.QLabel(self.centralwidget)
        self.lblPrivateKey.setGeometry(QtCore.QRect(20, 210, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblPrivateKey.setFont(font)
        self.lblPrivateKey.setObjectName("lblPrivateKey")
        self.lblPublicKey = QtWidgets.QLabel(self.centralwidget)
        self.lblPublicKey.setGeometry(QtCore.QRect(20, 260, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblPublicKey.setFont(font)
        self.lblPublicKey.setObjectName("lblPublicKey")
        self.lblKeyHash = QtWidgets.QLabel(self.centralwidget)
        self.lblKeyHash.setGeometry(QtCore.QRect(20, 310, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblKeyHash.setFont(font)
        self.lblKeyHash.setObjectName("lblKeyHash")
        self.lblWif = QtWidgets.QLabel(self.centralwidget)
        self.lblWif.setGeometry(QtCore.QRect(20, 360, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblWif.setFont(font)
        self.lblWif.setObjectName("lblWif")
        self.lblWAddress = QtWidgets.QLabel(self.centralwidget)
        self.lblWAddress.setGeometry(QtCore.QRect(20, 410, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblWAddress.setFont(font)
        self.lblWAddress.setObjectName("lblWAddress")
        self.lblSegwit = QtWidgets.QLabel(self.centralwidget)
        self.lblSegwit.setGeometry(QtCore.QRect(20, 460, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblSegwit.setFont(font)
        self.lblSegwit.setObjectName("lblSegwit")
        self.lblSBech32 = QtWidgets.QLabel(self.centralwidget)
        self.lblSBech32.setGeometry(QtCore.QRect(20, 510, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblSBech32.setFont(font)
        self.lblSBech32.setObjectName("lblSBech32")
        self.lnPrivateKey = QtWidgets.QLineEdit(self.centralwidget)
        self.lnPrivateKey.setGeometry(QtCore.QRect(200, 210, 791, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnPrivateKey.setFont(font)
        self.lnPrivateKey.setPlaceholderText("")
        self.lnPrivateKey.setReadOnly(True)
        self.lnPrivateKey.setObjectName("lnPrivateKey")
        self.btnClipboard_1 = QtWidgets.QPushButton(self.centralwidget)
        self.btnClipboard_1.setEnabled(False)
        self.btnClipboard_1.setGeometry(QtCore.QRect(1000, 210, 111, 31))
        self.btnClipboard_1.setObjectName("btnClipboard_1")
        self.lnPublicKey = QtWidgets.QLineEdit(self.centralwidget)
        self.lnPublicKey.setGeometry(QtCore.QRect(200, 260, 791, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnPublicKey.setFont(font)
        self.lnPublicKey.setPlaceholderText("")
        self.lnPublicKey.setReadOnly(True)
        self.lnPublicKey.setObjectName("lnPublicKey")
        self.btnClipboard_2 = QtWidgets.QPushButton(self.centralwidget)
        self.btnClipboard_2.setEnabled(False)
        self.btnClipboard_2.setGeometry(QtCore.QRect(1000, 260, 111, 31))
        self.btnClipboard_2.setObjectName("btnClipboard_2")
        self.lnKeyHash = QtWidgets.QLineEdit(self.centralwidget)
        self.lnKeyHash.setGeometry(QtCore.QRect(200, 310, 791, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnKeyHash.setFont(font)
        self.lnKeyHash.setPlaceholderText("")
        self.lnKeyHash.setReadOnly(True)
        self.lnKeyHash.setObjectName("lnKeyHash")
        self.btnClipboard_3 = QtWidgets.QPushButton(self.centralwidget)
        self.btnClipboard_3.setEnabled(False)
        self.btnClipboard_3.setGeometry(QtCore.QRect(1000, 310, 111, 31))
        self.btnClipboard_3.setObjectName("btnClipboard_3")
        self.lnWif = QtWidgets.QLineEdit(self.centralwidget)
        self.lnWif.setGeometry(QtCore.QRect(200, 360, 791, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnWif.setFont(font)
        self.lnWif.setPlaceholderText("")
        self.lnWif.setReadOnly(True)
        self.lnWif.setObjectName("lnWif")
        self.btnClipboard_4 = QtWidgets.QPushButton(self.centralwidget)
        self.btnClipboard_4.setEnabled(False)
        self.btnClipboard_4.setGeometry(QtCore.QRect(1000, 360, 111, 31))
        self.btnClipboard_4.setObjectName("btnClipboard_4")
        self.lnAddress = QtWidgets.QLineEdit(self.centralwidget)
        self.lnAddress.setGeometry(QtCore.QRect(200, 410, 791, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnAddress.setFont(font)
        self.lnAddress.setPlaceholderText("")
        self.lnAddress.setReadOnly(True)
        self.lnAddress.setObjectName("lnAddress")
        self.btnClipboard_5 = QtWidgets.QPushButton(self.centralwidget)
        self.btnClipboard_5.setEnabled(False)
        self.btnClipboard_5.setGeometry(QtCore.QRect(1000, 410, 111, 31))
        self.btnClipboard_5.setObjectName("btnClipboard_5")
        self.lnSegwit = QtWidgets.QLineEdit(self.centralwidget)
        self.lnSegwit.setGeometry(QtCore.QRect(200, 460, 791, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnSegwit.setFont(font)
        self.lnSegwit.setPlaceholderText("")
        self.lnSegwit.setReadOnly(True)
        self.lnSegwit.setObjectName("lnSegwit")
        self.btnClipboard_6 = QtWidgets.QPushButton(self.centralwidget)
        self.btnClipboard_6.setEnabled(False)
        self.btnClipboard_6.setGeometry(QtCore.QRect(1000, 460, 111, 31))
        self.btnClipboard_6.setObjectName("btnClipboard_6")
        self.lnBech32 = QtWidgets.QLineEdit(self.centralwidget)
        self.lnBech32.setGeometry(QtCore.QRect(200, 510, 791, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lnBech32.setFont(font)
        self.lnBech32.setPlaceholderText("")
        self.lnBech32.setReadOnly(True)
        self.lnBech32.setObjectName("lnBech32")
        self.btnClipboard_7 = QtWidgets.QPushButton(self.centralwidget)
        self.btnClipboard_7.setEnabled(False)
        self.btnClipboard_7.setGeometry(QtCore.QRect(1000, 510, 111, 31))
        self.btnClipboard_7.setObjectName("btnClipboard_7")
        CryptoWallet.setCentralWidget(self.centralwidget)

        self.retranslateUi(CryptoWallet)
        QtCore.QMetaObject.connectSlotsByName(CryptoWallet)
        self.btnSubmit.clicked.connect(self.creaChiavi) #Chiama funzione creaChiavi all'evento "clicked"
        self.btnClipboard_1.clicked.connect(self.copyPrivateKey) #Chiama funzione copyPrivateKey all'evento "clicked"
        self.btnClipboard_2.clicked.connect(self.copyPublicKey) #Chiama funzione copyPublicKey all'evento "clicked"
        self.btnClipboard_3.clicked.connect(self.copyKeyHash) #Chiama funzione copyKeyHash all'evento "clicked"
        self.btnClipboard_4.clicked.connect(self.copyWif) #Chiama funzione copyWif all'evento "clicked"
        self.btnClipboard_5.clicked.connect(self.copyAddress) #Chiama funzione copyAddress all'evento "clicked"
        self.btnClipboard_6.clicked.connect(self.copySegwit) #Chiama funzione copySegwit all'evento "clicked"
        self.btnClipboard_7.clicked.connect(self.copyBech32) #Chiama funzione copyBech32 all'evento "clicked"

    def creaChiavi(self):

        chiave1 = self.lnChiave1.text()
        chiave2 = self.lnChiave2.text()
        priv = hashlib.sha256(chiave2.encode('utf-8')).hexdigest()

        if (chiave1 == "m"):
            key = bit.Key.from_hex(priv)
        else:
            key = bit.PrivateKeyTestnet.from_hex(priv)

        hashkey = hashlib.sha256(key.public_key).digest()
        ripemd160 = hashlib.new("ripemd160")
        ripemd160.update(hashkey)
        keyhash = ripemd160.digest()

        self.lnPrivateKey.setText(key.to_hex()) #print("Private Key:      ", key.to_hex())
        self.lnPublicKey.setText(utils.bytes_to_hex(key.public_key, True)) #print("Public Key:       ", utils.bytes_to_hex(key.public_key, True))
        self.lnKeyHash.setText(keyhash.hex() + " (ripemd160(sha256(pub)))") #print("KeyHas:           ", keyhash.hex(), "(ripemd160(sha256(pub)))")
        self.lnWif.setText(key.to_wif()) #print("WIF:              ", key.to_wif())
        self.lnAddress.setText(key.address + " P2PKH") #print("Address:          ", key.address, "P2PKH")
        self.lnSegwit.setText(key.segwit_address) #print("SegWit Addr:      ", key.segwit_address)

        if (chiave1 == "m"):
            bech = bech32.encode('bc', 0, keyhash)
        else:
            bech = bech32.encode('tb', 0, keyhash)

        self.lnBech32.setText(bech) #print("Bech32 Addr:      ", bech)
        
        #Abilita tutti i pulsanti per copiare nella Clipboard
        self.btnClipboard_1.setEnabled(True)
        self.btnClipboard_2.setEnabled(True)
        self.btnClipboard_3.setEnabled(True)
        self.btnClipboard_4.setEnabled(True)
        self.btnClipboard_5.setEnabled(True)
        self.btnClipboard_6.setEnabled(True)
        self.btnClipboard_7.setEnabled(True)

    def copyPrivateKey(self): # Copia negli appunti la chiave privata

        pyperclip.copy(self.lnPrivateKey.text())
        msg = QMessageBox()

        msg.setWindowTitle("CHIAVE PRIVATA COPIATA!")
        msg.setText("La chiave privata è stata copiata negli appunti!")
        msg.setIcon(QMessageBox.Information)
        msg.exec_()

    def copyPublicKey(self): # Copia negli appunti la chiave pubblica
    
        pyperclip.copy(self.lnPublicKey.text())
        msg = QMessageBox()

        msg.setWindowTitle("CHIAVE PUBBLICA COPIATA!")
        msg.setText("La chiave pubblica è stata copiata negli appunti!")
        msg.setIcon(QMessageBox.Information)
        msg.exec_()
    
    def copyKeyHash(self): # Copia negli appunti la chiave hash
        
        pyperclip.copy(self.lnKeyHash.text())
        msg = QMessageBox()

        msg.setWindowTitle("CHIAVE HASH COPIATA!")
        msg.setText("La chiave hash è stata copiata negli appunti!")
        msg.setIcon(QMessageBox.Information)
        msg.exec_()

    def copyWif(self): # Copia negli appunti la chiave wif
        
        pyperclip.copy(self.lnWif.text())
        msg = QMessageBox()

        msg.setWindowTitle("CHIAVE WIF COPIATA!")
        msg.setText("La chiave wif è stata copiata negli appunti!")
        msg.setIcon(QMessageBox.Information)
        msg.exec_()

    def copyAddress(self): # Copia negli appunti l'indirizzo
        
        pyperclip.copy(self.lnAddress.text())
        msg = QMessageBox()

        msg.setWindowTitle("INDIRIZZO COPIATO!")
        msg.setText("L'indirizzo è stato copiato negli appunti!")
        msg.setIcon(QMessageBox.Information)
        msg.exec_()

    def copySegwit(self): # Copia negli appunti il SegWit
        
        pyperclip.copy(self.lnSegwit.text())
        msg = QMessageBox()

        msg.setWindowTitle("Segwit COPIATO!")
        msg.setText("Il SegWit è stato copiato negli appunti!")
        msg.setIcon(QMessageBox.Information)
        msg.exec_()

    def copyBech32(self): # Copia negli appunti il Bech32
        
        pyperclip.copy(self.lnBech32.text())
        msg = QMessageBox()

        msg.setWindowTitle("Bech32 COPIATO!")
        msg.setText("Il Bech32 è stato copiato negli appunti!")
        msg.setIcon(QMessageBox.Information)
        msg.exec_()

    def retranslateUi(self, CryptoWallet):
        _translate = QtCore.QCoreApplication.translate
        CryptoWallet.setWindowTitle(_translate("CryptoWallet", "CRYPTO WALLET"))
        self.lblChiave1.setText(_translate("CryptoWallet", "CHIAVE 1"))
        self.lblChiave2.setText(_translate("CryptoWallet", "CHIAVE 2"))
        self.lnChiave1.setPlaceholderText(_translate("CryptoWallet", "m"))
        self.lnChiave2.setPlaceholderText(_translate("CryptoWallet", "ciccio pasticcio"))
        self.btnSubmit.setText(_translate("CryptoWallet", "CREA CHIAVI"))
        self.lblPrivateKey.setText(_translate("CryptoWallet", "Private Key"))
        self.lblPublicKey.setText(_translate("CryptoWallet", "Public Key"))
        self.lblKeyHash.setText(_translate("CryptoWallet", "Key Hash"))
        self.lblWif.setText(_translate("CryptoWallet", "WIF"))
        self.lblWAddress.setText(_translate("CryptoWallet", "Address"))
        self.lblSegwit.setText(_translate("CryptoWallet", "SegWit Addr"))
        self.lblSBech32.setText(_translate("CryptoWallet", "Bech32 Addr"))
        self.btnClipboard_1.setText(_translate("CryptoWallet", "COPY CLIPBOARD"))
        self.btnClipboard_2.setText(_translate("CryptoWallet", "COPY CLIPBOARD"))
        self.btnClipboard_3.setText(_translate("CryptoWallet", "COPY CLIPBOARD"))
        self.btnClipboard_4.setText(_translate("CryptoWallet", "COPY CLIPBOARD"))
        self.btnClipboard_5.setText(_translate("CryptoWallet", "COPY CLIPBOARD"))
        self.btnClipboard_6.setText(_translate("CryptoWallet", "COPY CLIPBOARD"))
        self.btnClipboard_7.setText(_translate("CryptoWallet", "COPY CLIPBOARD"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CryptoWallet = QtWidgets.QMainWindow()
    ui = Ui_CryptoWallet()
    ui.setupUi(CryptoWallet)
    CryptoWallet.show()
    sys.exit(app.exec_())
